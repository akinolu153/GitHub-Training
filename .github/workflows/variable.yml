#name of file
name: Variable-obj

on:
# event_trigger
  workflow_dispatch:
    inputs:
      name:
        description: Retrieving Github context and variable
        required: true
        type: string
env:
  VAR1: myvariable1
  VAR2: myvariable2
  VAR3: myvarlabel3

# job to execute
jobs: 
  job-1:
    runs-on: ubuntu-latest  
    #job to capture GITHUBcontext objects
    steps:
    - name: Github variable details
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run:  |
        echo  "printing github context"
        echo "$GITHUB_CONTEXT"
  job-2:
    runs-on: ubuntu-latest
    
      
    steps:
    -  name: steps 1 # run name
       id: step1  # to be referenced
       run: echo "step1value=Hello" >> $GITHUB_OUTPUT
       
    -  name: Step 1b
       id: step1b
       run: echo "step2value=World"  >> $GITHUB_OUTPUT
    
    outputs:
      output1: ${{ steps.step1.outputs.step1value }}
      output2: ${{ steps.step1b.outputs.step2value }}
  
  job-3:
    runs-on: ubuntu-latest
    needs: job-2
    steps:
    -  name: Job number 3
       run: echo ${{ needs.job-2.outputs.output1 }} ${{ needs.job-2.outputs.output2 }}

  job-4:
    runs-on: ubuntu-latest
    env:
      VAR1: job-4var1 # overriding variable declared at worflow level
      VAR2: job-4var2
    needs: job-3
    steps:
    - name: Job number 4
      run: | 

        echo $VAR1 # print VAR1 varible at worflow level
        echo ${{ env.VAR1 }} # print VAR1 variable at job level



